{"version":3,"sources":["./src/app/form-impresora-config/form-impresora-config.page.html","./src/app/Services/cocinas.service.ts","./src/app/form-impresora-config/form-impresora-config-routing.module.ts","./src/app/form-impresora-config/form-impresora-config.module.ts","./src/app/form-impresora-config/form-impresora-config.page.scss","./src/app/form-impresora-config/form-impresora-config.page.ts"],"names":[],"mappings":"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","file":"form-impresora-config-form-impresora-config-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button  (click)=\\\"atras()\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Impresora</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <ion-button class=\\\"button-rounded\\\" color=\\\"primary\\\" (click)=\\\"probar()\\\">Imprimir Prueba</ion-button> \\n  \\n  <div class=\\\"form-card\\\">        \\n    <ion-item>\\n      <ion-label>Conectar ESCPOS Bluetooth</ion-label>\\n      <ion-toggle [(ngModel)]=\\\"impresora.escposBluetooth\\\" (ionChange)=\\\"guardar()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\n    </ion-item> \\n            \\n    <ion-item *ngIf=\\\"impresora.escposBluetooth\\\">\\n      <ion-label position=\\\"floating\\\" >Mac *</ion-label>\\n      <ion-input name=\\\"mac\\\" type=\\\"text\\\" (ionChange)=\\\"guardar()\\\" [(ngModel)]=\\\"impresora.mac\\\" required></ion-input>\\n    </ion-item>  \\n    \\n  </div>\\n\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <p>\\n          <b>Imprimir Comandas Automáticamente</b><br>\\n          Automáticamente se imprimirá una comanda cada vez que se genere un pedido.\\n        </p>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-toggle [(ngModel)]=\\\"impresora.comandas\\\" (ionChange)=\\\"guardar()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <p>\\n          <b>Imprimir Ticket Automáticamente </b><br>\\n          Automáticamente se imprimirá un ticket al cobrar un pedido\\n        </p>\\n      </ion-col>\\n      <ion-col size=\\\"2\\\">\\n        <ion-toggle [(ngModel)]=\\\"impresora.pedidosFinalizar\\\" (ionChange)=\\\"guardar()\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  \\n\\n\\n  <!--p>Para las siguientes configuraciones tener en cuenta que es necesario abrir la aplicación en un navegardor modo Kiosk</p>\\n\\n  <ion-item>\\n    <ion-label>Subscripción Panel Comandas</ion-label>\\n    <ion-toggle [(ngModel)]=\\\"impresora.subsComanda\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label>Subscripción Panel Pedidos</ion-label>\\n    <ion-toggle [(ngModel)]=\\\"impresora.subsPedido\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\n  </ion-item-->\\n  \\n  \\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { Mesa } from '../models/mesa';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { BaseService } from './base.service';\nimport { ComerciosService } from './comercios.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CocinasService extends BaseService{\n\n  constructor(\n    protected afs: AngularFirestore,\n    private comerciosService:ComerciosService\n    ) {     \n      super(afs); \n      this.comerciosService.getSelectedCommerce().subscribe(data=>{\n        // let comercio_seleccionadoId = localStorage.getItem('comercio_seleccionadoId'); \n        if(data){\n         \n         this.setPath('comercios/'+data.id+'/cocinas')   \n        }\n        \n      })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormImpresoraConfigPage } from './form-impresora-config.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormImpresoraConfigPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormImpresoraConfigPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormImpresoraConfigPageRoutingModule } from './form-impresora-config-routing.module';\n\nimport { FormImpresoraConfigPage } from './form-impresora-config.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    FormImpresoraConfigPageRoutingModule\n  ],\n  declarations: [FormImpresoraConfigPage]\n})\nexport class FormImpresoraConfigPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0taW1wcmVzb3JhLWNvbmZpZy9mb3JtLWltcHJlc29yYS1jb25maWcucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Impresora } from '../models/impresora';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { CocinasService } from '../Services/cocinas.service';\nimport { ImpresoraService } from '../Services/impresora.service';\n\n@Component({\n  selector: 'app-form-impresora-config',\n  templateUrl: './form-impresora-config.page.html',\n  styleUrls: ['./form-impresora-config.page.scss'],\n})\nexport class FormImpresoraConfigPage implements OnInit {\n\n  public cocinas = [];\n  public impresora:Impresora\n  public conexionActual = false;\n\n  constructor(\n    private cocinasService:CocinasService,\n    private impresoraService:ImpresoraService,\n    private authService:AuthenticationService,\n    private navCtrl:NavController\n  ) { \n    this.impresora = new Impresora()\n    this.impresoraService.obsEstadoImpresora().subscribe(data=>{\n      this.conexionActual = data.conectada;\n    })        \n  }\n\n  ngOnInit() {\n    this.cocinasService.list().subscribe((data) => {     \n      this.cocinas = data; \n      this.impresora = this.impresoraService.obtenerImpresora();\n      console.log(this.impresora)\n    })\n  }\n\n  guardar(){\n\n    if(this.impresora.escposBluetooth && this.impresora.mac == \"\"){\n      alert(\"Ingrese un valor de MAC ADDRESS\");\n      return;\n    }\n\n    this.impresoraService.guardarImpresora(this.impresora);\n    \n  }\n\n\n  atras(){\n    this.navCtrl.back()\n  }\n\n\n  probar(){\n    this.impresoraService.impresionPrueba(this.authService.getEmail());\n  }\n\n}\n"],"sourceRoot":"webpack:///"}