{"version":3,"sources":["./src/app/form-apertura-caja/form-apertura-caja.page.html","./src/app/Services/clientes.service.ts","./src/app/Services/keyword.service.ts","./src/app/form-apertura-caja/form-apertura-caja-routing.module.ts","./src/app/form-apertura-caja/form-apertura-caja.module.ts","./src/app/form-apertura-caja/form-apertura-caja.page.scss","./src/app/form-apertura-caja/form-apertura-caja.page.ts"],"names":[],"mappings":"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","file":"form-apertura-caja-form-apertura-caja-module.js","sourcesContent":["export default \"<ion-content  class=\\\"ion-padding\\\">  \\n\\n  <div class=\\\"form-card\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h4>Fecha de Apertura </h4> \\n    </ion-text>             \\n    {{fecha | date: 'dd/MM/yyyy h:mm a'}}\\n  </div> \\n \\n  <ion-text color=\\\"primary\\\">\\n    <h4>Ultimo Cierre: Efectivo {{caja.totalEfectivo | currency}}</h4>\\n  </ion-text>\\n\\n  <div>\\n    <ion-text color=\\\"primary\\\">\\n      <h4>Hay en Efectivo*</h4> \\n    </ion-text>             \\n    <ion-item>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"efectivo\\\" required></ion-input>\\n    </ion-item>    \\n  </div>\\n\\n  <ion-text color=\\\"primary\\\">\\n    <h4>Ultimo Cierre: Debito {{caja.totalDebito | currency}}</h4>\\n  </ion-text>\\n\\n  <div>\\n    <ion-text color=\\\"primary\\\">\\n      <h4>Hay Débito*</h4> \\n    </ion-text>            \\n    <ion-item>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"debito\\\" required></ion-input>\\n    </ion-item>    \\n  </div>\\n\\n  <ion-text color=\\\"primary\\\">\\n    <h4>Ultimo Cierre: Credito {{caja.totalCredito | currency}}</h4>\\n  </ion-text>\\n\\n  <div>\\n    <ion-text color=\\\"primary\\\">\\n      <h4>Hay Crédito*</h4> \\n    </ion-text>            \\n    <ion-item>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"credito\\\" required></ion-input>\\n    </ion-item>    \\n  </div> \\n  \\n\\n  <ion-toolbar>\\n    <ion-button slot=\\\"end\\\" (click)=\\\"abrir()\\\">Abrir</ion-button>    \\n    <ion-button slot=\\\"start\\\"  color=\\\"light\\\" (click)=\\\"cancelar()\\\">Cancelar</ion-button>\\n  </ion-toolbar>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { firestore } from 'firebase';\nimport { map, subscribeOn } from 'rxjs/operators';\nimport * as firebase from 'firebase';\nimport { Cliente } from '../models/cliente';\nimport { KeywordService } from './keyword.service';\nimport { ComerciosService } from './comercios.service';\nimport { BaseService } from './base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService extends BaseService {\n\n  private collectionGroup:string;\n  \n  constructor(\n    protected afs: AngularFirestore,\n    private keywordService:KeywordService,\n    private comerciosService:ComerciosService\n    ) {     \n      super(afs); \n      this.comerciosService.getSelectedCommerce().subscribe(data=>{\n        // let comercio_seleccionadoId = localStorage.getItem('comercio_seleccionadoId'); \n        if(data){         \n          console.log(data.id)\n         this.setPath('comercios/'+data.id+'/clientes')   \n        }\n        \n      })\n      this.collectionGroup ='/clientes';\n  }\n\n\n  public create(data:Cliente) {   \n\n    this.keywordService.agregarKeywords(data, [data.nombre,data.email]);\n   \n    const param = JSON.parse(JSON.stringify(data));\n    return this.afs.collection(this.path).doc(data.id).set({...param,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()});\n           \n    \n  }\n\n  getByEmail(email){\n    return this.afs.collection(this.path, ref =>  ref.where('email','==',email)).valueChanges();    \n  }\n\n  getByNombre(nombre){\n    return this.afs.collection(this.path, ref =>  ref.where('nombre','==',nombre)).valueChanges();    \n  }\n\n  getRef(id){\n    return this.afs.collection(this.path).doc(id).ref;\n  }\n\n  public getAll() {   \n    return this.afs.collection(this.path).snapshotChanges();\n  }\n  \n  public update(cliente:Cliente) {\n\n    this.keywordService.agregarKeywords(cliente, [cliente.nombre,cliente.email]);\n\n\n    console.log(cliente);\n    const param = JSON.parse(JSON.stringify(cliente));\n    return this.afs.collection(this.path).doc(cliente.id).set({...param,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  public delete(data) {\n    //Debo eliminar primero cada subscripción\n    if(data.subscripciones){\n      data.subscripciones.forEach(subscripcion => {\n        this.afs.doc(subscripcion).delete();\n      });\n    }\n    \n    return this.afs.collection(this.path).doc(data.id).delete();    \n  }\n\n  public addCtaCorriente(clienteId,ctaCorrienteId){\n    let param ={\n      ctaId:ctaCorrienteId\n    }\n    this.afs.collection(this.path+'/'+clienteId+'/ctasCorrientes').doc(ctaCorrienteId).set(param)\n  }\n\n  public deleteCtaCorriente(clienteId,ctaCorrienteId){\n    this.afs.collection(this.path+'/'+clienteId+'/ctasCorrientes').doc(ctaCorrienteId).delete();\n  }\n\n  public search(limit,orderBy,palabra,ultimo){      \n    if(ultimo == \"\"){\n      console.log(\"!!!!!! primero\")\n      console.log(palabra)     \n      console.log(orderBy)\n      return this.afs.collection(this.path, ref => \n        ref.where('keywords','array-contains',palabra)\n            .orderBy(orderBy)\n            .limit(limit)).snapshotChanges();\n    }\n    else{\n      console.log(palabra)     \n      console.log(orderBy)\n      return this.afs.collection(this.path, ref => \n        ref.where('keywords','array-contains',palabra)\n            .orderBy(orderBy)\n            .startAfter(ultimo)\n            .limit(limit)).snapshotChanges();    \n    }    \n  }  \n\n  //Esto para ver todos los beneficios o cuestiones del cliente particular en todo el entorno\n  public getAllClientesbyEmail(email) {  \n    return this.afs.collectionGroup(this.collectionGroup, ref => ref.where('email', '==', email)).get(/*{ source: 'server' }*/)\n    .pipe(\n      map(actions => {\n        const data = [];       \n        actions.forEach(a => {\n          const item = a.data() ;\n          item.id = a.id;\n          data.push(item);\n        });\n        return data;\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeywordService {\n\n  constructor() { }\n\n  public agregarKeywords(objeto,palabras){    \n    objeto.keywords.push('');\n    objeto.keywords.push(' ');\n\n    console.log(palabras)\n    \n    palabras.forEach(palabra => {\n      objeto.keywords.push(palabra);\n      let p = palabra.toLowerCase().split(\" \");\n      p.forEach(element => {\n        objeto.keywords = objeto.keywords.concat(this.createKeywords(element));\n      });\n    });\n    \n    \n  }\n\n  private createKeywords(name){\n    const arrName = [];\n    let curName = '';\n    \n    name.split('').forEach(letter => {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormAperturaCajaPage } from './form-apertura-caja.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormAperturaCajaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormAperturaCajaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormAperturaCajaPageRoutingModule } from './form-apertura-caja-routing.module';\n\nimport { FormAperturaCajaPage } from './form-apertura-caja.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormAperturaCajaPageRoutingModule\n  ],\n  declarations: [FormAperturaCajaPage]\n})\nexport class FormAperturaCajaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tYXBlcnR1cmEtY2FqYS9mb3JtLWFwZXJ0dXJhLWNhamEucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { CajasService } from '../Services/cajas.service';\nimport { Caja } from '../models/caja';\nimport { EnumTipoMovimientoCaja, MovimientoCaja } from '../models/movimientoCaja';\nimport { MovimientosService } from '../Services/movimientos.service';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-form-apertura-caja',\n  templateUrl: './form-apertura-caja.page.html',\n  styleUrls: ['./form-apertura-caja.page.scss'],\n})\nexport class FormAperturaCajaPage implements OnInit {\n\n  private enumTipoMovimientoCaja = EnumTipoMovimientoCaja\n  \n  public datosForm: FormGroup;  \n  public fecha = new Date();\n  public cajaId = \"\";\n  submitted = false;\n  public totalActual=0;\n  public caja:Caja;\n\n  public efectivo = 0;\n  public debito = 0;\n  public credito = 0;\n\n  public movSub:Subscription;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private authenticationService:AuthenticationService,\n    private cajasServices:CajasService,\n    private movimientosService:MovimientosService,\n    private firestore: AngularFirestore,\n  ) {\n    this.caja = new Caja();\n   }\n\n  ngOnInit() {\n\n    let comercio_seleccionadoId = localStorage.getItem('comercio_seleccionadoId');\n    this.movSub = this.cajasServices.get(this.route.snapshot.params.cajaId).subscribe(data =>{\n      this.caja.asignarValores(data);\n      console.log(this.caja)\n    })\n\n  }\n\n  ionViewDidLeave(){\n    this.movSub.unsubscribe();\n  }\n\n  abrir(){\n    this.submitted = true;\n\n    this.caja.estado = \"abierta\";\n\n    var aperturaEfectivo = new MovimientoCaja(\n      \"\",\n      this.enumTipoMovimientoCaja.apertura,\n      \"local\",\n      this.caja.id,\n      \"efectivo\",\n      Number(this.efectivo),\n      \"Apertura De Caja Efectivo\",\n      this.authenticationService.getUID(),\n      this.authenticationService.getEmail());\n      \n    this.movimientosService.add(aperturaEfectivo);\n\n\n    var aperturaDebito = new MovimientoCaja(\n      \"\",\n      this.enumTipoMovimientoCaja.apertura,\n      \"local\",\n      this.caja.id,\n      \"debito\",\n      Number(this.debito),\n      \"Apertura De Caja Débito\",\n      this.authenticationService.getUID(),\n      this.authenticationService.getEmail());\n      \n    this.movimientosService.add(aperturaDebito);\n\n\n    var aperturaCredito = new MovimientoCaja(\n      \"\",\n      this.enumTipoMovimientoCaja.apertura,\n      \"local\",\n      this.caja.id,\n      \"credito\",\n      Number(this.credito),\n      \"Apertura De Caja Crédito\",\n      this.authenticationService.getUID(),\n      this.authenticationService.getEmail());\n      \n    this.movimientosService.add(aperturaCredito);\n\n\n    this.caja.estado = \"abierta\";\n\n    this.caja.totalEfectivo = Number(this.efectivo);\n    this.caja.totalDebito = Number(this.debito);\n    this.caja.totalCredito = Number(this.credito);\n\n    this.actualizarMontosCaja()\n\n    this.cajasServices.update(this.caja);\n\n    this.navCtrl.back();\n  }\n\n  cancelar(){\n    this.navCtrl.back();\n  }\n\n  actualizarMontosCaja(){\n  \n    this.caja.totalEfectivo = Number(this.efectivo);\n    this.caja.totalDebito = Number(this.debito);\n    this.caja.totalCredito = Number(this.credito);\n\n  const param1 = JSON.parse(JSON.stringify(this.caja));\n  this.cajasServices.update(param1);\n}\n\n}\n\n\n\n"],"sourceRoot":"webpack:///"}