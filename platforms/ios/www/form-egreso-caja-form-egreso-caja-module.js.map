{"version":3,"sources":["./src/app/form-egreso-caja/form-egreso-caja.page.html","./src/app/Services/clientes.service.ts","./src/app/Services/keyword.service.ts","./src/app/form-egreso-caja/form-egreso-caja-routing.module.ts","./src/app/form-egreso-caja/form-egreso-caja.module.ts","./src/app/form-egreso-caja/form-egreso-caja.page.scss","./src/app/form-egreso-caja/form-egreso-caja.page.ts"],"names":[],"mappings":"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","file":"form-egreso-caja-form-egreso-caja-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title  size=\\\"small\\\">Egreso de caja</ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content  class=\\\"ion-padding\\\">\\n\\n  <ion-item class=\\\"item-card\\\">\\n    <ion-label position=\\\"floating\\\">Caja</ion-label>\\n    <ion-select [(ngModel)]=\\\"cajaSeleccionadaIndex\\\" (ionChange)=\\\"setearCaja()\\\">\\n      <span *ngFor=\\\"let caja of cajas;let i=index\\\">\\n        <ion-select-option [value]=\\\"i\\\">{{caja.nombre}}</ion-select-option>\\n      </span>          \\n    </ion-select> \\n  </ion-item>\\n\\n  \\n  <div class=\\\"form-card\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <p>Total Efectivo {{totalActual | currency}}</p>\\n    </ion-text> \\n                \\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Monto *</ion-label>\\n      <ion-input name=\\\"monto\\\" type=\\\"number\\\" [(ngModel)]=\\\"monto\\\" required></ion-input>\\n    </ion-item>\\n  </div>\\n            \\n  <div class=\\\"form-card\\\">\\n    <ion-text color=\\\"primary\\\">\\n      <h4>Motivo</h4>    \\n    </ion-text> \\n    <ion-item >\\n      <ion-textarea [(ngModel)]=\\\"motivo\\\" required></ion-textarea>\\n    </ion-item>     \\n  </div>  \\n\\n  <ion-toolbar>\\n    <ion-button class=\\\"button-rounded\\\" slot=\\\"end\\\" (click)=\\\"guardar()\\\">Guardar</ion-button>\\n    \\n    <ion-button class=\\\"button-rounded\\\" slot=\\\"start\\\"  color=\\\"light\\\" (click)=\\\"cancelar()\\\">Cancelar</ion-button>\\n  </ion-toolbar>\\n\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { firestore } from 'firebase';\nimport { map, subscribeOn } from 'rxjs/operators';\nimport * as firebase from 'firebase';\nimport { Cliente } from '../models/cliente';\nimport { KeywordService } from './keyword.service';\nimport { ComerciosService } from './comercios.service';\nimport { BaseService } from './base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService extends BaseService {\n\n  private collectionGroup:string;\n  \n  constructor(\n    protected afs: AngularFirestore,\n    private keywordService:KeywordService,\n    private comerciosService:ComerciosService\n    ) {     \n      super(afs); \n      this.comerciosService.getSelectedCommerce().subscribe(data=>{\n        // let comercio_seleccionadoId = localStorage.getItem('comercio_seleccionadoId'); \n        if(data){         \n          console.log(data.id)\n         this.setPath('comercios/'+data.id+'/clientes')   \n        }\n        \n      })\n      this.collectionGroup ='/clientes';\n  }\n\n\n  public create(data:Cliente) {   \n\n    this.keywordService.agregarKeywords(data, [data.nombre,data.email]);\n   \n    const param = JSON.parse(JSON.stringify(data));\n    return this.afs.collection(this.path).doc(data.id).set({...param,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()});\n           \n    \n  }\n\n  getByEmail(email){\n    return this.afs.collection(this.path, ref =>  ref.where('email','==',email)).valueChanges();    \n  }\n\n  getByNombre(nombre){\n    return this.afs.collection(this.path, ref =>  ref.where('nombre','==',nombre)).valueChanges();    \n  }\n\n  getRef(id){\n    return this.afs.collection(this.path).doc(id).ref;\n  }\n\n  public getAll() {   \n    return this.afs.collection(this.path).snapshotChanges();\n  }\n  \n  public update(cliente:Cliente) {\n\n    this.keywordService.agregarKeywords(cliente, [cliente.nombre,cliente.email]);\n\n\n    console.log(cliente);\n    const param = JSON.parse(JSON.stringify(cliente));\n    return this.afs.collection(this.path).doc(cliente.id).set({...param,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  public delete(data) {\n    //Debo eliminar primero cada subscripción\n    if(data.subscripciones){\n      data.subscripciones.forEach(subscripcion => {\n        this.afs.doc(subscripcion).delete();\n      });\n    }\n    \n    return this.afs.collection(this.path).doc(data.id).delete();    \n  }\n\n  public addCtaCorriente(clienteId,ctaCorrienteId){\n    let param ={\n      ctaId:ctaCorrienteId\n    }\n    this.afs.collection(this.path+'/'+clienteId+'/ctasCorrientes').doc(ctaCorrienteId).set(param)\n  }\n\n  public deleteCtaCorriente(clienteId,ctaCorrienteId){\n    this.afs.collection(this.path+'/'+clienteId+'/ctasCorrientes').doc(ctaCorrienteId).delete();\n  }\n\n  public search(limit,orderBy,palabra,ultimo){      \n    if(ultimo == \"\"){\n      console.log(\"!!!!!! primero\")\n      console.log(palabra)     \n      console.log(orderBy)\n      return this.afs.collection(this.path, ref => \n        ref.where('keywords','array-contains',palabra)\n            .orderBy(orderBy)\n            .limit(limit)).snapshotChanges();\n    }\n    else{\n      console.log(palabra)     \n      console.log(orderBy)\n      return this.afs.collection(this.path, ref => \n        ref.where('keywords','array-contains',palabra)\n            .orderBy(orderBy)\n            .startAfter(ultimo)\n            .limit(limit)).snapshotChanges();    \n    }    \n  }  \n\n  //Esto para ver todos los beneficios o cuestiones del cliente particular en todo el entorno\n  public getAllClientesbyEmail(email) {  \n    return this.afs.collectionGroup(this.collectionGroup, ref => ref.where('email', '==', email)).get(/*{ source: 'server' }*/)\n    .pipe(\n      map(actions => {\n        const data = [];       \n        actions.forEach(a => {\n          const item = a.data() ;\n          item.id = a.id;\n          data.push(item);\n        });\n        return data;\n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeywordService {\n\n  constructor() { }\n\n  public agregarKeywords(objeto,palabras){    \n    objeto.keywords.push('');\n    objeto.keywords.push(' ');\n\n    console.log(palabras)\n    \n    palabras.forEach(palabra => {\n      objeto.keywords.push(palabra);\n      let p = palabra.toLowerCase().split(\" \");\n      p.forEach(element => {\n        objeto.keywords = objeto.keywords.concat(this.createKeywords(element));\n      });\n    });\n    \n    \n  }\n\n  private createKeywords(name){\n    const arrName = [];\n    let curName = '';\n    \n    name.split('').forEach(letter => {\n      curName += letter;\n      arrName.push(curName);\n    });\n    return arrName;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormEgresoCajaPage } from './form-egreso-caja.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormEgresoCajaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormEgresoCajaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormEgresoCajaPageRoutingModule } from './form-egreso-caja-routing.module';\n\nimport { FormEgresoCajaPage } from './form-egreso-caja.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    FormEgresoCajaPageRoutingModule\n  ],\n  declarations: [FormEgresoCajaPage]\n})\nexport class FormEgresoCajaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tZWdyZXNvLWNhamEvZm9ybS1lZ3Jlc28tY2FqYS5wYWdlLnNjc3MifQ== */\";","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { CajasService } from '../Services/cajas.service';\nimport { EnumTipoMovimientoCaja, MovimientoCaja } from '../models/movimientoCaja';\nimport { MovimientosService } from '../Services/movimientos.service';\nimport { Caja } from '../models/caja';\nimport { ToastService } from '../Services/toast.service';\nimport { Subscription } from 'rxjs';\nimport { Comercio } from '../models/comercio';\nimport { ComerciosService } from '../Services/comercios.service';\n\n@Component({\n  selector: 'app-form-egreso-caja',\n  templateUrl: './form-egreso-caja.page.html',\n  styleUrls: ['./form-egreso-caja.page.scss'],\n})\nexport class FormEgresoCajaPage implements OnInit {\n\n  private enumTipoMovimientoCaja = EnumTipoMovimientoCaja\n  \n  public datosForm: FormGroup;\n  submitted = false;\n  public totalActual=0;\n  public cajas = []\n  public cajaSeleccionadaIndex=-1;\n  public cajaSeleccionada:Caja;\n\n  public caja:Caja;\n  private egreso:MovimientoCaja;\n\n  public monto = 0;\n  public motivo = 0;\n\n  public comercio:Comercio;\n\n  public metodoPagoSeleccionado = \"efectivo\"\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private cajasService:CajasService,\n    private authenticationService:AuthenticationService,\n    private firestore:AngularFirestore,\n    private movimientosService:MovimientosService,\n    private toastServices:ToastService,\n    private comerciosService:ComerciosService,\n    private router:Router,\n  ) { \n    this.comercio = new Comercio()\n    this.caja = new Caja();\n    \n   }\n\n   get f() { return this.datosForm.controls; }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter(){\n\n    this.comercio.asignarValores(this.comerciosService.getSelectedCommerceValue());\n    \n    this.cajas = [];\n    this.cajasService.list().subscribe((cajas:any)=>{      \n      for(let i=0;i <cajas.length;i++){\n        if(cajas[i].estado == \"abierta\"){ \n          this.cajas.push(cajas[i]);\n        }   \n      }      \n      console.log(this.cajas);\n      if(this.cajas.length == 0){\n        this.toastServices.alert(\"Debes tener al menos una caja abierta\",\"\");\n        this.router.navigate(['/list-cajas']);\n      }\n      else{\n        this.setCaja();\n      }       \n    });\n  }\n\n  setCaja(){\n\n    for(let i=0;i <this.cajas.length;i++){\n      if(this.cajas[i].id == this.route.snapshot.params.cajaId){ \n        this.cajaSeleccionadaIndex = i;\n        this.caja = this.cajas[i]\n        this.totalActual = this.cajas[i].totalEfectivo;\n      }   \n    } \n  }\n\n  setearCaja(){\n    this.caja = this.cajas[this.cajaSeleccionadaIndex]\n    this.totalActual = this.caja[this.cajaSeleccionadaIndex].totalEfectivo;\n  }\n\n  guardar(){\n\n    this.submitted = true;\n    \n\n    if (this.metodoPagoSeleccionado ==\"efectivo\" && this.caja.id == \"\") {\n      this.toastServices.alert('Por favor seleccione una caja antes de continuar',\"\");\n      return;\n    } \n\n    if(this.metodoPagoSeleccionado ==\"efectivo\" && this.monto > this.totalActual){\n      this.toastServices.alert(\"El monto de egreso no puede ser mayor al monto total de efectivo en caja\",\"\");\n      return;\n    }\n\n     \n    this.movimientosService.agregarMovimientoCaja(this.caja.id,\"\",this.enumTipoMovimientoCaja.egreso,\"\",\"efectivo\", - this.monto,this.motivo)\n\n    \n    this.navCtrl.back(); \n  }\n\n  cancelar(){\n    this.navCtrl.back();\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}