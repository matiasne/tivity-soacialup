{"version":3,"sources":["./src/app/form-egreso-caja/form-egreso-caja.page.html","./src/app/form-egreso-caja/form-egreso-caja-routing.module.ts","./src/app/form-egreso-caja/form-egreso-caja.module.ts","./src/app/form-egreso-caja/form-egreso-caja.page.scss","./src/app/form-egreso-caja/form-egreso-caja.page.ts"],"names":[],"mappings":"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","file":"form-egreso-caja-form-egreso-caja-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Egreso de caja</ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content  class=\\\"ion-padding\\\">\\n\\n  <ion-item class=\\\"item-card\\\">\\n    <ion-label position=\\\"floating\\\">Método</ion-label>\\n    <ion-select [(ngModel)]=\\\"metodoPagoSeleccionado\\\">\\n      <ion-select-option [value]=\\\"'efectivo'\\\">Efectivo</ion-select-option>\\n      <ion-select-option [value]=\\\"'debito'\\\">Débito</ion-select-option>\\n      <ion-select-option [value]=\\\"'credito'\\\">Crédito</ion-select-option>\\n      <ion-select-option [value]=\\\"'ctaCorriente'\\\">Cta. Corriente</ion-select-option>\\n    </ion-select>    \\n  </ion-item>\\n\\n  <ion-item *ngIf=\\\"metodoPagoSeleccionado == 'efectivo'\\\" class=\\\"item-card\\\">\\n    <ion-label position=\\\"floating\\\">Caja</ion-label>\\n    <ion-select [(ngModel)]=\\\"cajaSeleccionadaIndex\\\" (ionChange)=\\\"setearCaja()\\\">\\n      <span *ngFor=\\\"let caja of cajas;let i=index\\\">\\n        <ion-select-option [value]=\\\"i\\\">{{caja.nombre}}</ion-select-option>\\n      </span>          \\n    </ion-select> \\n  </ion-item>\\n\\n  \\n\\n  <form [formGroup]=\\\"datosForm\\\">  \\n\\n    <div class=\\\"form-card\\\">\\n      <ion-text color=\\\"primary\\\">\\n        <p *ngIf=\\\"metodoPagoSeleccionado == 'efectivo'\\\">Total Efectivo {{totalActual | currency}}</p>\\n        <h4>Monto *</h4> \\n      </ion-text> \\n              \\n      <ion-item [class.invalid]=\\\"submitted && !datosForm.controls.monto.valid\\\">\\n        <ion-input name=\\\"monto\\\" type=\\\"number\\\" formControlName=\\\"monto\\\" required></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"submitted && f.monto.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.monto.errors.required\\\"><h5>Ingresa un monto</h5></div>\\n      </div>  \\n    </div>\\n            \\n    <div class=\\\"form-card\\\">\\n      <ion-text color=\\\"primary\\\">\\n        <h4>Motivo</h4>    \\n      </ion-text> \\n      <ion-item [class.invalid]=\\\"submitted && !datosForm.controls.motivo.valid\\\">\\n        <ion-textarea formControlName=\\\"motivo\\\" required></ion-textarea>\\n      </ion-item>\\n      <div *ngIf=\\\"submitted && f.motivo.errors\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"f.motivo.errors.required\\\"><h5>Ingresa un motivo</h5></div>\\n      </div> \\n    </div>\\n    \\n   \\n   \\n  </form>  \\n\\n\\n  <ion-toolbar>\\n    <ion-button class=\\\"button-rounded\\\" slot=\\\"end\\\" (click)=\\\"guardar()\\\">Guardar</ion-button>\\n    \\n    <ion-button class=\\\"button-rounded\\\" slot=\\\"start\\\"  color=\\\"light\\\" (click)=\\\"cancelar()\\\">Cancelar</ion-button>\\n  </ion-toolbar>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormEgresoCajaPage } from './form-egreso-caja.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormEgresoCajaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormEgresoCajaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormEgresoCajaPageRoutingModule } from './form-egreso-caja-routing.module';\n\nimport { FormEgresoCajaPage } from './form-egreso-caja.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    FormEgresoCajaPageRoutingModule\n  ],\n  declarations: [FormEgresoCajaPage]\n})\nexport class FormEgresoCajaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tZWdyZXNvLWNhamEvZm9ybS1lZ3Jlc28tY2FqYS5wYWdlLnNjc3MifQ== */\";","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { CajasService } from '../Services/cajas.service';\nimport { EnumTipoMovimientoCaja, MovimientoCaja } from '../models/movimientoCaja';\nimport { MovimientosService } from '../Services/movimientos.service';\nimport { Caja } from '../models/caja';\nimport { ToastService } from '../Services/toast.service';\nimport { Subscription } from 'rxjs';\nimport { Comercio } from '../models/comercio';\nimport { ComerciosService } from '../Services/comercios.service';\n\n@Component({\n  selector: 'app-form-egreso-caja',\n  templateUrl: './form-egreso-caja.page.html',\n  styleUrls: ['./form-egreso-caja.page.scss'],\n})\nexport class FormEgresoCajaPage implements OnInit {\n\n  private enumTipoMovimientoCaja = EnumTipoMovimientoCaja\n  \n  public datosForm: FormGroup;\n  submitted = false;\n  public totalActual=0;\n  public cajas = []\n  public cajaSeleccionadaIndex=-1;\n  public cajaSeleccionada:Caja;\n\n  public caja:Caja;\n  private egreso:MovimientoCaja;\n  cajasSubs:Subscription;\n\n  public comercio:Comercio;\n\n  public metodoPagoSeleccionado = \"efectivo\"\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private navCtrl: NavController,\n    private route: ActivatedRoute,\n    private cajasService:CajasService,\n    private authenticationService:AuthenticationService,\n    private firestore:AngularFirestore,\n    private movimientosService:MovimientosService,\n    private toastServices:ToastService,\n    private comerciosService:ComerciosService,\n    private router:Router,\n  ) { \n    this.comercio = new Comercio()\n    this.caja = new Caja();\n    this.egreso = new MovimientoCaja(this.authenticationService.getUID(), this.authenticationService.getEmail());\n    this.egreso.id = this.firestore.createId();\n\n    \n    \n    this.datosForm = this.formBuilder.group({\n      monto: ['', Validators.required],\n      motivo:['', Validators.required]\n    });\n\n   }\n\n   get f() { return this.datosForm.controls; }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter(){\n\n    this.comercio.asignarValores(this.comerciosService.getSelectedCommerceValue());\n    \n    this.cajas = [];\n    this.cajasService.list().subscribe((cajas:any)=>{      \n      for(let i=0;i <cajas.length;i++){\n        if(cajas[i].estado == \"abierta\"){ \n          this.cajas.push(cajas[i]);\n        }   \n      }      \n      console.log(this.cajas);\n      if(this.cajas.length == 0){\n        this.toastServices.alert(\"Debes tener al menos una caja abierta\",\"\");\n        this.router.navigate(['/list-cajas']);\n      }\n      else{\n        this.setCaja();\n      }       \n    });\n  }\n\n  setCaja(){\n\n    for(let i=0;i <this.cajas.length;i++){\n      if(this.cajas[i].id == this.route.snapshot.params.cajaId){ \n        this.cajaSeleccionadaIndex = i;\n        this.caja = this.cajas[i]\n        this.totalActual = this.cajas[i].totalEfectivo;\n      }   \n    } \n  }\n\n  setearCaja(){\n    this.caja = this.cajas[this.cajaSeleccionadaIndex]\n    this.totalActual = this.caja[this.cajaSeleccionadaIndex].totalEfectivo;\n  }\n\n  guardar(){\n\n    this.submitted = true;\n    \n    if (this.datosForm.invalid) {\n      this.toastServices.alert('Por favor completar todos los campos marcados con * antes de continuar',\"\");\n      return;\n    } \n\n    if (this.metodoPagoSeleccionado ==\"efectivo\" && this.caja.id == \"\") {\n      this.toastServices.alert('Por favor seleccione una caja antes de continuar',\"\");\n      return;\n    } \n\n    if(this.metodoPagoSeleccionado ==\"efectivo\" && this.datosForm.controls.monto.value > this.totalActual){\n      this.toastServices.alert(\"El monto de egreso no puede ser mayor al monto total de efectivo en caja\",\"\");\n      return;\n    }\n\n    this.actualizarMontosCaja()\n    \n    if(this.comercio.config.movimientosCajas){\n      this.egreso.cajaId = this.caja.id;\n      this.egreso.tipo = this.enumTipoMovimientoCaja.egreso;\n      this.egreso.asignarValores(this.datosForm.value);\n      this.egreso.metodoPago = this.metodoPagoSeleccionado;\n      this.egreso.monto = - Number(this.datosForm.controls.monto.value);\n      this.egreso.motivo = this.datosForm.controls.motivo.value;\n      this.movimientosService.add(this.egreso);\n    }\n    \n    this.navCtrl.back(); \n  }\n\n  cancelar(){\n    this.navCtrl.back();\n  }\n\n  actualizarMontosCaja(){\n    if(this.metodoPagoSeleccionado == \"efectivo\"){\n      this.caja.totalEfectivo = Number(this.caja.totalEfectivo)- Number(this.datosForm.controls.monto.value);\n    }\n    if(this.metodoPagoSeleccionado == \"credito\"){\n      this.caja.totalCredito = Number(this.caja.totalCredito)- Number(this.datosForm.controls.monto.value);\n    }\n    if(this.metodoPagoSeleccionado == \"debito\"){\n      this.caja.totalDebito = Number(this.caja.totalDebito) - Number(this.datosForm.controls.monto.value);\n    }\n\n    const param1 = JSON.parse(JSON.stringify(this.caja));\n    this.cajasService.update(param1);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}