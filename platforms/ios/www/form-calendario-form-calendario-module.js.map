{"version":3,"sources":["./src/app/form-calendario/form-calendario.page.html","./src/app/Services/calendarios.service.ts","./src/app/form-calendario/form-calendario-routing.module.ts","./src/app/form-calendario/form-calendario.module.ts","./src/app/form-calendario/form-calendario.page.scss","./src/app/form-calendario/form-calendario.page.ts"],"names":[],"mappings":"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","file":"form-calendario-form-calendario-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title  size=\\\"small\\\">Nuevo Calendario</ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form [formGroup]=\\\"datosForm\\\" >\\n\\n    <div [ngClass]=\\\"{'form-card': true, 'form-card-error': submitted && !datosForm.controls.nombre.valid}\\\">\\n      <ion-text color=\\\"primary\\\">\\n        <h4>Nombre *</h4>        \\n      </ion-text>\\n          \\n      <ion-item>\\n        <ion-input name=\\\"nombre\\\" type=\\\"text\\\" formControlName=\\\"nombre\\\" required></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"submitted && f.nombre.errors\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"f.nombre.errors.required\\\"><h5>Ingresa el nombre del calendario</h5></div>\\n      </div> \\n    </div>\\n  </form>  \\n\\n  <div class=\\\"form-card\\\" *ngIf=\\\"canElimianr\\\">\\n    <ion-text color=\\\"danger\\\">\\n      <h5 color=\\\"danger\\\">zona de riesgo</h5>\\n    </ion-text>      \\n    <ion-button  color=\\\"danger\\\" (click)=\\\"eliminar()\\\">Eliminar Calendario</ion-button>\\n  </div>\\n\\n  <ion-toolbar>\\n    <ion-button slot=\\\"end\\\" (click)=\\\"guardar()\\\">Guardar</ion-button>\\n    \\n    <ion-button slot=\\\"start\\\"  color=\\\"light\\\" (click)=\\\"cancelar()\\\">Cancelar</ion-button>\\n  </ion-toolbar>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { BaseService } from './base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendariosService extends BaseService{\n\n  private servicioId = \"\";\n  private calendarioId = \"\";\n\n  constructor(\n    protected afs: AngularFirestore\n  ) {     \n    super(afs);\n    \n  }\n\n  setPathIds(servicioId){\n    this.servicioId = servicioId;\n    let comercioId = localStorage.getItem('comercio_seleccionadoId');\n    console.log(\"comercios/\"+comercioId+\"/servicios/\"+this.servicioId+\"/calendarios\")\n    this.setPath(\"comercios/\"+comercioId+\"/servicios/\"+this.servicioId+\"/calendarios\");\n  }\n\n  public set(data) { \n    this.servicioId = data.servicioId;  \n    const param = JSON.parse(JSON.stringify(data));\n\n    let id =\"\"; //El id es el primer nombre! logica pensada para que reemplace al cambiarse el nombre del plan\n    if(param.id != \"\"){\n      id = param.id;\n    }\n    else{\n      id=param.nombre;\n    }\n    console.log(id);\n    console.log(param);\n    console.log(this.path)\n    return this.afs.collection(this.path).doc(id).set(param);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormCalendarioPage } from './form-calendario.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormCalendarioPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormCalendarioPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormCalendarioPageRoutingModule } from './form-calendario-routing.module';\n\nimport { FormCalendarioPage } from './form-calendario.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    FormCalendarioPageRoutingModule\n  ],\n  declarations: [FormCalendarioPage]\n})\nexport class FormCalendarioPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tY2FsZW5kYXJpby9mb3JtLWNhbGVuZGFyaW8ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController, ModalController, NavParams, AlertController } from '@ionic/angular';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { ToastService } from '../Services/toast.service';\nimport { Calendario } from '../models/calendario';\nimport { CalendariosService } from '../Services/calendarios.service';\n\n@Component({\n  selector: 'app-form-calendario',\n  templateUrl: './form-calendario.page.html',\n  styleUrls: ['./form-calendario.page.scss'],\n})\nexport class FormCalendarioPage implements OnInit {\n\n  datosForm: FormGroup;\n  submitted = false;\n  public calendario:Calendario;\n  public canElimianr = false;\n  public comercioId = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private navCtrl: NavController,    \n    public modalCtrl: ModalController,\n    private navParams:NavParams,\n    public alertController: AlertController,\n    private firestore: AngularFirestore,\n    private toastServices:ToastService,\n    private calendarioService:CalendariosService\n  ) {\n\n    this.datosForm = this.formBuilder.group({\n      id:['',null],\n      nombre: ['', Validators.required],\n    });\n\n    \n    \n    if(this.navParams.get('calendario')){\n\n\n      this.datosForm.patchValue(this.navParams.get('calendario'));\n      \n      if(this.navParams.get('calendario').id)\n      this.canElimianr = true;\n    }   \n    \n \n    \n   }\n\n  ngOnInit() {\n  }\n\n  get f() { return this.datosForm.controls; }\n\n\n  guardar(){\n\n    this.submitted = true;\n    \n    if (this.datosForm.invalid) {\n      this.toastServices.alert('Por favor completar todos los campos marcados con * antes de continuar',\"\");\n      return;\n    } \n    this.modalCtrl.dismiss(this.datosForm.value);\n  }\n\n  cancelar(){\n    this.modalCtrl.dismiss();\n  }\n\n  async eliminar(){\n\n    const alert = await this.alertController.create({\n      header: 'Está seguro que desea eliminar la caja?',\n      message: 'Se perderán todos los movimientos y pagos de la misma.',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: (blah) => {\n            \n          }\n        }, {\n          text: 'Eliminar',\n          handler: () => {       \n               \n            this.modalCtrl.dismiss('eliminar');\n          }\n        }\n      ]\n    });\n    await alert.present();\n\n    \n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}