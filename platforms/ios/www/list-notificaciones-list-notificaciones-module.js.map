{"version":3,"sources":["./src/app/list-notificaciones/list-notificaciones.page.html","./src/app/list-notificaciones/list-notificaciones-routing.module.ts","./src/app/list-notificaciones/list-notificaciones.module.ts","./src/app/list-notificaciones/list-notificaciones.page.scss","./src/app/list-notificaciones/list-notificaciones.page.ts"],"names":[],"mappings":"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","file":"list-notificaciones-list-notificaciones-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Mis Notificaciones</ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <div *ngIf=\\\"buscando\\\" class=\\\"mensaje FadeOut FadeIn\\\">\\n    <img src=\\\"../../assets/img/buscando.fw.png\\\" alt=\\\"\\\">\\n    <p>Cargando comandas, aguarde unos segundos por favor</p>\\n  </div>\\n\\n  <div *ngIf=\\\"!buscando && notificaciones.length == 0\\\" class=\\\"mensaje FadeOut FadeIn\\\">\\n    <img src=\\\"../../assets/img/notificaciones.fw.png\\\" alt=\\\"\\\">\\n    <p>AÃºn no tienes notificaciones.</p>\\n  </div>\\n\\n    <ion-item *ngFor=\\\"let notificacion of notificaciones;let i=index\\\" class=\\\"item-card\\\">   \\n      <!--div slot=\\\"start\\\">\\n        <img src=\\\"{{notificacion.foto}}\\\" *ngIf=\\\"notificacion.foto\\\">\\n        <ion-icon name=\\\"cube-outline\\\" *ngIf=\\\"!notificacion.foto\\\"></ion-icon>\\n      </div-->          \\n      <ion-label>\\n        <p>{{notificacion.titulo}}</p>\\n        <h3>{{notificacion.mensaje}}</h3>\\n        <p>{{notificacion.createdAt.toDate() | date:'dd/MM/yyyy (EEE) - hh:mm aaa'}}</p>       \\n      </ion-label> \\n      <ion-button slot=\\\"end\\\" color=\\\"danger\\\" (click)=\\\"eliminar(notificacion)\\\"><ion-icon name=\\\"trash\\\" ></ion-icon></ion-button>\\n     \\n    </ion-item>  \\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListNotificacionesPage } from './list-notificaciones.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListNotificacionesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListNotificacionesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListNotificacionesPageRoutingModule } from './list-notificaciones-routing.module';\n\nimport { ListNotificacionesPage } from './list-notificaciones.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListNotificacionesPageRoutingModule\n  ],\n  declarations: [ListNotificacionesPage]\n})\nexport class ListNotificacionesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3Qtbm90aWZpY2FjaW9uZXMvbGlzdC1ub3RpZmljYWNpb25lcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NotifificacionesAppService } from '../Services/notifificaciones-app.service';\nimport { AuthenticationService } from '../Services/authentication.service';\n\n@Component({\n  selector: 'app-list-notificaciones',\n  templateUrl: './list-notificaciones.page.html',\n  styleUrls: ['./list-notificaciones.page.scss'],\n})\nexport class ListNotificacionesPage implements OnInit {\n\n  private notiSub:Subscription;\n  public notificaciones = [];\n  public buscando = true;\n\n  constructor(\n    private notificacionesAppService:NotifificacionesAppService,\n    private authService:AuthenticationService\n  ) {     \n\n  }\n\n  ionViewDidEnter(){\n    let usuario = this.authService.getActualUser();\n    console.log(usuario)\n    this.notiSub = this.notificacionesAppService.getAll(usuario.uid).subscribe(snapshot=>{                 \n      this.notificaciones = [];\n      this.buscando = false;\n      snapshot.forEach((snap: any) => {           \n          var item = snap.payload.doc.data();\n          item.id = snap.payload.doc.id; \n          this.notificaciones.push(item);             \n      });\n      console.log(this.notificaciones);\n      \n    }); \n  }\n\n  ionViewDidLeave(){\n    this.notificaciones.forEach(element => {\n        if(element.estado == \"pendiente\"){\n          element.estado = \"leida\";\n          this.notificacionesAppService.update(element);\n        }\n    });\n    this.notiSub.unsubscribe();\n  }\n\n  eliminar(item){\n    this.notificacionesAppService.delete(item);\n  }\n\n  \n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}