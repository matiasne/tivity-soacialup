{"version":3,"sources":["./src/app/form-comercio-configuracion/form-comercio-configuracion.page.html","./src/app/form-comercio-configuracion/form-comercio-configuracion-routing.module.ts","./src/app/form-comercio-configuracion/form-comercio-configuracion.module.ts","./src/app/form-comercio-configuracion/form-comercio-configuracion.page.scss","./src/app/form-comercio-configuracion/form-comercio-configuracion.page.ts"],"names":[],"mappings":"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","file":"form-comercio-configuracion-form-comercio-configuracion-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Configuración</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n\\r\\n  <!--ion-item *ngIf=\\\"rolActual == 'Administrador'\\\">\\r\\n    <ion-label>Habilitar Productos</ion-label>\\r\\n    <ion-toggle [(ngModel)]=\\\"comercio.config.productos\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item *ngIf=\\\"rolActual == 'Administrador'\\\">\\r\\n    <ion-label>Habilitar Servicios</ion-label>\\r\\n    <ion-toggle [(ngModel)]=\\\"comercio.config.servicios\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n  </ion-item-->\\r\\n\\r\\n\\r\\n  <ion-button *ngIf=\\\"rolActual.rol == 'Administrador'\\\" class=\\\"button-rounded\\\"  (click)=\\\"editarComercio()\\\">Datos Comercio</ion-button>\\r\\n\\r\\n\\r\\n  <ion-button *ngIf=\\\"rolActual.rol != 'Administrador'\\\" class=\\\"button-rounded\\\"  color=\\\"danger\\\" (click)=\\\"desvincular()\\\"><ion-icon name=\\\"trash\\\" ></ion-icon>Desvincular</ion-button>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Cobrar Sin realizar pedido</b><br>\\r\\n         Desde el catálogo podrás armar el carrito y cobrarlo directamente sin utilizar el panel de pedidos.\\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.cobrarDirectamente\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>    \\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  \\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Mesas</b><br>\\r\\n          Podrá asignar una mesa a cada pedido y gestionar los mismos en base a este parámetro\\r\\n        </p>\\r\\n       \\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.mesas\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button *ngIf=\\\"comercio.config.mesas  && rolActual.rol == 'Administrador'\\\" class=\\\"button-rounded\\\"    (click)=\\\"openEditMesas()\\\">Editar Mesas</ion-button>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Panel Comandas</b><br>\\r\\n          Desde un nuevo panel podrá gestionar el estado de sus pedidos. Ideal para una o varias cocinas\\r\\n        </p>\\r\\n        \\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.comandas\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button *ngIf=\\\"comercio.config.comandas && rolActual.rol == 'Administrador'\\\" class=\\\"button-rounded\\\"    (click)=\\\"openEditCocinas()\\\">Editar Cocinas</ion-button>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Gestión Stock</b><br>\\r\\n          Agregue stock a cada producto manualmente. El sistema resta automáticamente el stock cada vez que genera un pedido\\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.stock\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Clientes</b><br>\\r\\n          Realice un seguimiento de cada uno de sus clientes.\\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.clientes\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n \\r\\n \\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador' && comercio.config.clientes\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Beneficios de clientes</b><br>\\r\\n          Genere y registre beneficios y descuentos a sus clientes.\\r\\n          \\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.beneficiosClientes\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button *ngIf=\\\"comercio.config.beneficiosClientes  && rolActual.rol == 'Administrador'\\\" class=\\\"button-rounded\\\"    (click)=\\\"openBeneficiosClientes()\\\">Editar Beneficios</ion-button>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador' && comercio.config.clientes\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Beneficio por puntaje</b><br>\\r\\n          Cree y administre su propio club de puntos con acciones automatizadas\\r\\n          \\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.beneficiosPorPuntaje\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button *ngIf=\\\"comercio.config.beneficiosPorPuntaje  && rolActual.rol == 'Administrador'\\\" class=\\\"button-rounded\\\"    (click)=\\\"openBeneficiosPuntaje()\\\">Editar Puntaje y Beneficios</ion-button>\\r\\n  </ion-grid>\\r\\n\\r\\n \\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Movimientos de Caja</b><br>\\r\\n          Obtenga un detalle de cada movimiento que se generó en las cajas de su local\\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.movimientosCajas\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Habilitar Facturación AFIP</b><br>\\r\\n          Realize cuando quiera factuaras electrónicas de cada uno de sus pedidos.\\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.afip\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n  <ion-grid *ngIf=\\\"rolActual.rol == 'Administrador'\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"10\\\">\\r\\n        <p>\\r\\n          <b>Sincronizar Productos con Woocommerce</b><br>\\r\\n          Sincronize su tienda online, gestione y reciba sus pedidos.\\r\\n          \\r\\n        </p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"2\\\">\\r\\n        <ion-toggle [(ngModel)]=\\\"comercio.config.woocommerce\\\" (ionChange)=\\\"update()\\\"  [ngModelOptions]=\\\"{standalone: true}\\\"></ion-toggle>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-button *ngIf=\\\"comercio.config.woocommerce\\\" class=\\\"button-rounded\\\" (click)=\\\"openEditWoocommerce()\\\">Configuración Woocommerce</ion-button>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n\\r\\n  <ion-button class=\\\"button-rounded\\\" *ngIf=\\\"rolActual.rol == 'Administrador'\\\"    (click)=\\\"openEditOpciones()\\\">Editar Grupo Opciones</ion-button>\\r\\n  <!--ion-button class=\\\"button-rounded\\\" *ngIf=\\\"rolActual.rol == 'Administrador'\\\"    (click)=\\\"openEditPedidos()\\\">Configurar Pedidos</ion-button-->\\r\\n  <ion-button class=\\\"button-rounded\\\" *ngIf=\\\"rolActual.rol == 'Administrador'\\\"   (click)=\\\"openEditHorarios()\\\">Editar Horarios</ion-button>\\r\\n  \\r\\n  <ion-button class=\\\"button-rounded\\\" *ngIf=\\\"rolActual.rol == 'Administrador'\\\"   (click)=\\\"linkWhatsapp()\\\">Link Whatsapp</ion-button>\\r\\n  <ion-button class=\\\"button-rounded\\\" *ngIf=\\\"rolActual.rol == 'Administrador'\\\"   (click)=\\\"openEditCategorias()\\\">Editar Categorias</ion-button>\\r\\n  \\r\\n\\r\\n  <ion-button class=\\\"button-rounded\\\"    (click)=\\\"verImpresora()\\\">Impresora</ion-button>\\r\\n  \\r\\n  <ion-button *ngIf=\\\"rolActual.rol == 'Administrador'\\\"  class=\\\"button-rounded\\\" color=\\\"danger\\\" (click)=\\\"elimiar()\\\">Eliminar Comercio</ion-button>\\r\\n\\r\\n   \\r\\n</ion-content> \\r\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FormComercioConfiguracionPage } from './form-comercio-configuracion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormComercioConfiguracionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FormComercioConfiguracionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormComercioConfiguracionPageRoutingModule } from './form-comercio-configuracion-routing.module';\n\nimport { FormComercioConfiguracionPage } from './form-comercio-configuracion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FormComercioConfiguracionPageRoutingModule\n  ],\n  declarations: [FormComercioConfiguracionPage]\n})\nexport class FormComercioConfiguracionPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tY29tZXJjaW8tY29uZmlndXJhY2lvbi9mb3JtLWNvbWVyY2lvLWNvbmZpZ3VyYWNpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ComerciosService } from '../Services/comercios.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Comercio } from '../models/comercio';\nimport { AuthenticationService } from '../Services/authentication.service';\nimport { FormComercioPage } from '../form-comercio/form-comercio.page';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { RolesService } from '../Services/roles.service';\nimport { Rol } from '../models/rol';\n\n@Component({\n  selector: 'app-form-comercio-configuracion',\n  templateUrl: './form-comercio-configuracion.page.html',\n  styleUrls: ['./form-comercio-configuracion.page.scss'],\n})\nexport class FormComercioConfiguracionPage implements OnInit {\n\n  private subs:Subscription;\n  public comercio:Comercio;\n\n  public cajas =[];\n  public horarios =[];\n  public categorias = [];\n  public rolActual:any =\"\";\n\n  constructor(\n    private comerciosService:ComerciosService,\n    private route:ActivatedRoute,\n    private router:Router,\n    private authService:AuthenticationService,\n    private modalCtrl:ModalController,\n    private alertController:AlertController,\n    private rolesService:RolesService\n  ) { \n    this.comercio = new Comercio();\n    this.comerciosService.getSelectedCommerce().subscribe(data=>{\n      this.comercio.asignarValores(data);\n    });   \n  }\n\n  ngOnInit() {\n     \n  } \n\n  ionViewDidEnter(){\n    let obs = this.authService.observeRol().subscribe(data=>{\n      this.rolActual = data;\n      console.log(this.rolActual)\n      //Aca setea todos los shows\n      obs.unsubscribe();\n    })\n  }\n\n  async editarComercio(){\n    // this.seleccionar(item);\n \n     const modal = await this.modalCtrl.create({\n       component: FormComercioPage,\n       componentProps: {\n         comercio:this.comercio      \n       }\n     });\n    \n     return await modal.present();\n     \n \n \n   }\n\n   async desvincular(){   \n\n    const alert = await this.alertController.create({\n      header: 'Eliminar',\n      message: 'Está seguro que desea desvincularse del comercio?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: (blah) => {\n            \n          }\n        }, {\n          text: 'Desvincular',\n          handler: () => {\n            this.rolesService.setPath('comercios/'+this.comercio.id+'/roles')   \n            this.rolesService.delete(this.rolActual.id);\n            this.router.navigate(['home']);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  openEditOpciones(){\n    this.router.navigate(['list-grupos-opciones']); \n  }\n  \n  openEditCategorias(){\n    this.router.navigate(['list-categorias']);\n  }\n\n  openEditCajas(){\n    this.router.navigate(['list-cajas']);\n  }\n\n  openEditHorarios(){\n    this.router.navigate(['list-horarios']);\n  }\n\n  openEditMesas(){\n    this.router.navigate(['list-mesas']);\n  }\n\n  openEditCocinas(){\n    this.router.navigate(['list-cocinas']);\n  }\n\n  openEditComandas(){\n    this.router.navigate(['form-comanda-configuracion']);\n  }\n\n  openEditPedidos(){\n    this.router.navigate(['form-pedidos-configuracion']);\n  }\n\n  verPersonal(){\n    this.router.navigate(['list-personal']);\n  }\n\n  linkWhatsapp(){\n    this.router.navigate(['details-whatsapp']);\n  }\n  \n  verImpresora(){\n    this.router.navigate(['form-impresora-config']);\n  }  \n\n  openEditWoocommerce(){\n    this.router.navigate(['form-woocommerce-configuracion']);\n  }\n\n  openBeneficiosClientes(){\n    this.router.navigate(['list-beneficios']);\n  }\n\n  openBeneficiosPuntaje(){\n    \n  }\n  \n  update(){\n\n    if(!this.comercio.config.clientes){\n      this.comercio.config.beneficiosClientes = false;\n      this.comercio.config.beneficiosPorPuntaje = false;\n    }\n    this.comerciosService.update(this.comercio);\n  }\n\n  \n  elimiar(){\n    this.presentAlertEliminar();\n  }\n\n  async presentAlertEliminar() {\n    const alert = await this.alertController.create({\n      header: 'Eliminar',\n      message: 'Está seguro que desea eliminar el comercio?',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: (blah) => {\n            \n          }\n        }, {\n          text: 'Eliminar',\n          handler: () => {\n            this.comerciosService.delete(this.comercio.id);\n            this.modalCtrl.dismiss();\n            this.router.navigate(['home']);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  \n\n\n}\n"],"sourceRoot":"webpack:///"}