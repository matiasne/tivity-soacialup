{"version":3,"sources":["./src/app/list-grupos-opciones/list-grupos-opciones.page.html","./src/app/Services/grupo-opciones.service.ts","./src/app/list-grupos-opciones/list-grupos-opciones-routing.module.ts","./src/app/list-grupos-opciones/list-grupos-opciones.module.ts","./src/app/list-grupos-opciones/list-grupos-opciones.page.scss","./src/app/list-grupos-opciones/list-grupos-opciones.page.ts"],"names":[],"mappings":"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","file":"list-grupos-opciones-list-grupos-opciones-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Grupo de Opciones</ion-title>\\n  </ion-toolbar> \\n</ion-header> \\n \\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <div *ngIf=\\\"buscando\\\" class=\\\"mensaje FadeOut FadeIn\\\">\\n    <img src=\\\"../../assets/img/buscando.fw.png\\\" alt=\\\"\\\">\\n    <p>Cargando comandas, aguarde unos segundos por favor</p>\\n  </div>\\n\\n  <div *ngIf=\\\"!buscando && grupos.length == 0\\\" class=\\\"mensaje FadeOut FadeIn\\\">\\n    <img src=\\\"../../assets/img/gruposOpciones.fw.png\\\" alt=\\\"\\\">\\n    <p>AÃºn no tienes grupos de opciones.</p>\\n  </div>\\n\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item-sliding *ngFor=\\\"let grupo of grupos;let i=index\\\" class=\\\"item-card\\\">\\n      <ion-item>        \\n        <ion-label>\\n          <b>{{grupo.nombre}}</b>         \\n        </ion-label> \\n      </ion-item>\\n  \\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option (click)=\\\"openEditGrupo(grupo)\\\"><ion-icon name=\\\"create\\\" ></ion-icon> Editar</ion-item-option>\\n      </ion-item-options>\\n  \\n    </ion-item-sliding>\\n  </ion-list>   \\n  \\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" (click)=\\\"openAddGrupo()\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { GrupoOpciones } from '../models/grupoOpciones';\nimport { BaseService } from './base.service';\nimport { ComerciosService } from './comercios.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupoOpcionesService extends BaseService { \n\n  constructor(\n    protected afs: AngularFirestore,\n    private comerciosService:ComerciosService\n    ) {     \n      super(afs); \n      this.comerciosService.getSelectedCommerce().subscribe(data=>{\n        // let comercio_seleccionadoId = localStorage.getItem('comercio_seleccionadoId'); \n        if(data){\n          \n          this.setPath('comercios/'+data.id+'/grupoOpciones')   \n         }\n        \n      })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListGruposOpcionesPage } from './list-grupos-opciones.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListGruposOpcionesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListGruposOpcionesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListGruposOpcionesPageRoutingModule } from './list-grupos-opciones-routing.module';\n\nimport { ListGruposOpcionesPage } from './list-grupos-opciones.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListGruposOpcionesPageRoutingModule\n  ],\n  declarations: [ListGruposOpcionesPage]\n})\nexport class ListGruposOpcionesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtZ3J1cG9zLW9wY2lvbmVzL2xpc3QtZ3J1cG9zLW9wY2lvbmVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { FormProductoGrupoOpcionesPage } from '../form-producto-grupo-opciones/form-producto-grupo-opciones.page';\nimport { GrupoOpcionesService } from '../Services/grupo-opciones.service';\nimport { LoadingService } from '../Services/loading.service';\n\n@Component({\n  selector: 'app-list-grupos-opciones',\n  templateUrl: './list-grupos-opciones.page.html',\n  styleUrls: ['./list-grupos-opciones.page.scss'],\n})\nexport class ListGruposOpcionesPage implements OnInit {\n\n  public grupos = [];\n  public buscando = true;\n\n  constructor(\n    public grupoOpcionesService:GrupoOpcionesService,\n    public router:Router,\n    public loadingService:LoadingService,\n    public modalController:ModalController\n  ) { }\n\n  ngOnInit() { \n    this.loadingService.presentLoadingText(\"Cargando Grupos\")\n    this.grupoOpcionesService.list().subscribe(grupos=>{\n      this.loadingService.dismissLoading()                \n      this.grupos = grupos;\n      this.buscando = false;\n    });\n\n  }\n\n  ionViewDidEnter(){\n    \n  }\n\n  async openAddGrupo(){\n    const modal = await this.modalController.create({\n      component: FormProductoGrupoOpcionesPage,   \n    });  \n\n    modal.onDidDismiss().then((retorno) => {\n      if(retorno.data){\n        this.grupoOpcionesService.add(retorno.data);\n      }        \n    });\n    return await modal.present();\n  }\n\n  async openEditGrupo(item){\n    const modal = await this.modalController.create({\n      component: FormProductoGrupoOpcionesPage, \n      componentProps:{\n        grupo: item\n      }  \n    });  \n\n    modal.onDidDismiss().then((retorno) => {\n      if(retorno.data){\n\n        if(retorno.data == \"eliminar\"){\n          this.grupoOpcionesService.delete(retorno.data);\n        }\n        else\n        this.grupoOpcionesService.update(retorno.data);\n      }        \n    });\n    return await modal.present();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}